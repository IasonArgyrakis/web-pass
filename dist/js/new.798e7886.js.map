{"version":3,"file":"js/new.798e7886.js","mappings":"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","sources":["webpack://web-pass/./src/views/NewPasswordView.vue","webpack://web-pass/../../../src/components/VCombobox/VCombobox.ts","webpack://web-pass/./src/components/NewPassword.vue","webpack://web-pass/src/components/NewPassword.vue","webpack://web-pass/./src/components/NewPassword.vue?de90","webpack://web-pass/./src/components/NewPassword.vue?170f","webpack://web-pass/src/views/NewPasswordView.vue","webpack://web-pass/./src/views/NewPasswordView.vue?792f","webpack://web-pass/./src/views/NewPasswordView.vue?37b9"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('section',{staticClass:\"src-views-new-password-view\"},[_c('src-components-new-password')],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","// Styles\nimport '../VAutocomplete/VAutocomplete.sass'\n\n// Extensions\nimport VSelect from '../VSelect/VSelect'\nimport VAutocomplete from '../VAutocomplete/VAutocomplete'\n\n// Utils\nimport { keyCodes } from '../../util/helpers'\n\n// Types\nimport { PropValidator } from 'vue/types/options'\n\n/* @vue/component */\nexport default VAutocomplete.extend({\n  name: 'v-combobox',\n\n  props: {\n    delimiters: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<string[]>,\n    returnObject: {\n      type: Boolean,\n      default: true,\n    },\n  },\n\n  data: () => ({\n    editingIndex: -1,\n  }),\n\n  computed: {\n    computedCounterValue (): number {\n      return this.multiple\n        ? this.selectedItems.length\n        : (this.internalSearch || '').toString().length\n    },\n    hasSlot (): boolean {\n      return VSelect.options.computed.hasSlot.call(this) || this.multiple\n    },\n    isAnyValueAllowed (): boolean {\n      return true\n    },\n    menuCanShow (): boolean {\n      if (!this.isFocused) return false\n\n      return this.hasDisplayedItems ||\n        (!!this.$slots['no-data'] && !this.hideNoData)\n    },\n    searchIsDirty (): boolean {\n      return this.internalSearch != null\n    },\n  },\n\n  methods: {\n    onInternalSearchChanged (val: any) {\n      if (\n        val &&\n        this.multiple &&\n        this.delimiters.length\n      ) {\n        const delimiter = this.delimiters.find(d => val.endsWith(d))\n        if (delimiter != null) {\n          this.internalSearch = val.slice(0, val.length - delimiter.length)\n          this.updateTags()\n        }\n      }\n\n      this.updateMenuDimensions()\n    },\n    genInput () {\n      const input = VAutocomplete.options.methods.genInput.call(this)\n\n      delete input.data!.attrs!.name\n      input.data!.on!.paste = this.onPaste\n\n      return input\n    },\n    genChipSelection (item: object, index: number) {\n      const chip = VSelect.options.methods.genChipSelection.call(this, item, index)\n\n      // Allow user to update an existing value\n      if (this.multiple) {\n        chip.componentOptions!.listeners! = {\n          ...chip.componentOptions!.listeners!,\n          dblclick: () => {\n            this.editingIndex = index\n            this.internalSearch = this.getText(item)\n            this.selectedIndex = -1\n          },\n        }\n      }\n\n      return chip\n    },\n    onChipInput (item: object) {\n      VSelect.options.methods.onChipInput.call(this, item)\n\n      this.editingIndex = -1\n    },\n    // Requires a manual definition\n    // to overwrite removal in v-autocomplete\n    onEnterDown (e: Event) {\n      e.preventDefault()\n      // If has menu index, let v-select-list handle\n      if (this.getMenuIndex() > -1) return\n\n      this.$nextTick(this.updateSelf)\n    },\n    onKeyDown (e: KeyboardEvent) {\n      const keyCode = e.keyCode\n\n      if (\n        e.ctrlKey ||\n        ![keyCodes.home, keyCodes.end].includes(keyCode)\n      ) {\n        VSelect.options.methods.onKeyDown.call(this, e)\n      }\n\n      // If user is at selection index of 0\n      // create a new tag\n      if (this.multiple &&\n        keyCode === keyCodes.left &&\n        this.$refs.input.selectionStart === 0\n      ) {\n        this.updateSelf()\n      } else if (keyCode === keyCodes.enter) {\n        this.onEnterDown(e)\n      }\n\n      // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n      this.changeSelectedIndex(keyCode)\n    },\n    onTabDown (e: KeyboardEvent) {\n      // When adding tags, if searching and\n      // there is not a filtered options,\n      // add the value to the tags list\n      if (this.multiple &&\n        this.internalSearch &&\n        this.getMenuIndex() === -1\n      ) {\n        e.preventDefault()\n        e.stopPropagation()\n\n        return this.updateTags()\n      }\n\n      VAutocomplete.options.methods.onTabDown.call(this, e)\n    },\n    selectItem (item: object) {\n      // Currently only supports items:<string[]>\n      if (this.editingIndex > -1) {\n        this.updateEditing()\n      } else {\n        VAutocomplete.options.methods.selectItem.call(this, item)\n\n        // if selected item contains search value,\n        // remove the search string\n        if (\n          this.internalSearch &&\n          this.multiple &&\n          this.getText(item).toLocaleLowerCase().includes(this.internalSearch.toLocaleLowerCase())\n        ) {\n          this.internalSearch = null\n        }\n      }\n    },\n    setSelectedItems () {\n      if (this.internalValue == null ||\n        this.internalValue === ''\n      ) {\n        this.selectedItems = []\n      } else {\n        this.selectedItems = this.multiple ? this.internalValue : [this.internalValue]\n      }\n    },\n    setValue (value?: any) {\n      VSelect.options.methods.setValue.call(this, value === undefined ? this.internalSearch : value)\n    },\n    updateEditing () {\n      const value = this.internalValue.slice()\n      const index = this.selectedItems.findIndex(item =>\n        this.getText(item) === this.internalSearch)\n\n      // If user enters a duplicate text on chip edit,\n      // don't add it, move it to the end of the list\n      if (index > -1) {\n        const item = typeof value[index] === 'object'\n          ? Object.assign({}, value[index])\n          : value[index]\n\n        value.splice(index, 1)\n        value.push(item)\n      } else {\n        value[this.editingIndex] = this.internalSearch\n      }\n\n      this.setValue(value)\n      this.editingIndex = -1\n      this.internalSearch = null\n    },\n    updateCombobox () {\n      // If search is not dirty, do nothing\n      if (!this.searchIsDirty) return\n\n      // The internal search is not matching\n      // the internal value, update the input\n      if (this.internalSearch !== this.getText(this.internalValue)) this.setValue()\n\n      // Reset search if using slot to avoid a double input\n      const isUsingSlot = Boolean(this.$scopedSlots.selection) || this.hasChips\n      if (isUsingSlot) this.internalSearch = null\n    },\n    updateSelf () {\n      this.multiple ? this.updateTags() : this.updateCombobox()\n    },\n    updateTags () {\n      const menuIndex = this.getMenuIndex()\n\n      // If the user is not searching\n      // and no menu item is selected\n      // or if the search is empty\n      // do nothing\n      if ((menuIndex < 0 && !this.searchIsDirty) ||\n          !this.internalSearch) return\n\n      if (this.editingIndex > -1) {\n        return this.updateEditing()\n      }\n\n      const index = this.selectedItems.findIndex(item =>\n        this.internalSearch === this.getText(item))\n\n      // If the duplicate item is an object,\n      // copy it, so that it can be added again later\n      const itemToSelect = index > -1 && typeof this.selectedItems[index] === 'object'\n        ? Object.assign({}, this.selectedItems[index])\n        : this.internalSearch\n\n      // If it already exists, do nothing\n      // this might need to change to bring\n      // the duplicated item to the last entered\n      if (index > -1) {\n        const internalValue = this.internalValue.slice()\n        internalValue.splice(index, 1)\n\n        this.setValue(internalValue)\n      }\n\n      // If menu index is greater than 1\n      // the selection is handled elsewhere\n      // TODO: find out where\n      if (menuIndex > -1) return (this.internalSearch = null)\n\n      this.selectItem(itemToSelect)\n\n      this.internalSearch = null\n    },\n    onPaste (event: ClipboardEvent) {\n      if (!this.multiple || this.searchIsDirty) return\n\n      const pastedItemText = event.clipboardData?.getData('text/vnd.vuetify.autocomplete.item+plain')\n      if (pastedItemText && this.findExistingIndex(pastedItemText as any) === -1) {\n        event.preventDefault()\n        VSelect.options.methods.selectItem.call(this, pastedItemText as any)\n      }\n    },\n    clearableCallback () {\n      this.editingIndex = -1\n\n      VAutocomplete.options.methods.clearableCallback.call(this)\n    },\n  },\n})\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('section',{staticClass:\"src-components-new-password\"},[_c('v-container',[_c('v-row',{staticClass:\"ma-2\"},[_c('v-col',{attrs:{\"cols\":\"12 br-2 rounded blue-grey \"}},_vm._l((_vm.passwordObj),function(keyValue,keyName){return _c('div',{key:keyName,staticClass:\"py-1\"},[_c('v-text-field',{staticClass:\"px-2 text-capitalize\",attrs:{\"dark\":\"\",\"label\":keyName,\"max-width\":\"100px\",\"value\":keyValue,\"persistent-hint\":\"\"},model:{value:(_vm.passwordObj[keyName]),callback:function ($$v) {_vm.$set(_vm.passwordObj, keyName, $$v)},expression:\"passwordObj[keyName]\"}})],1)}),0),_c('v-col',{attrs:{\"cols\":\"12 grey lighten-3 mt-2 rounded\"}},[_c('v-combobox',{staticClass:\"mt-4\",attrs:{\"auto-select-first\":\"\",\"dense\":\"\",\"label\":\"Press Enter to select highlighted Option\",\"multiple\":false,\"items\":this.keyValues},model:{value:(_vm.newKeyName),callback:function ($$v) {_vm.newKeyName=$$v},expression:\"newKeyName\"}}),_c('v-btn',{attrs:{\"color\":\"secondary\"},on:{\"click\":function($event){return _vm.addField()}}},[_vm._v(\" Add Field \"),_c('v-icon',{attrs:{\"right\":\"\",\"dark\":\"\"}},[_vm._v(\" mdi-plus \")])],1)],1),_c('v-col',[_c('v-btn',{attrs:{\"color\":\"primary\"},on:{\"click\":_vm.savePassObj}},[_vm._v(\" Save Password Item \"),_c('v-icon',{attrs:{\"right\":\"\",\"dark\":\"\"}},[_vm._v(\" mdi-content-save \")])],1)],1)],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template lang=\"html\">\n\n  <section class=\"src-components-new-password\">\n    <v-container>\n      <v-row class=\"ma-2\">\n        <v-col cols=\"12 br-2 rounded blue-grey \">\n\n          <div v-for=\"(keyValue,keyName) in passwordObj\" :key=\"keyName\" class=\" py-1   \">\n            <v-text-field\n                dark\n                :label=\"keyName\"\n                max-width=\"100px\"\n                :value=\"keyValue\"\n                v-model=\"passwordObj[keyName]\"\n                class=\"px-2 text-capitalize\"\n                persistent-hint\n            />\n\n          </div>\n\n        </v-col>\n        <v-col cols=\"12 grey lighten-3 mt-2 rounded\">\n          <v-combobox class=\"mt-4 \" auto-select-first dense\n                      label=\"Press Enter to select highlighted Option\" :multiple=false v-model=\"newKeyName\"\n                      :items=\"this.keyValues\"></v-combobox>\n          <v-btn color=\"secondary\" @click=\"addField()\">\n            Add Field\n            <v-icon\n                right\n                dark\n            >\n              mdi-plus\n            </v-icon>\n          </v-btn>\n        </v-col>\n        <v-col>\n          <v-btn color=\"primary\" @click=\"savePassObj\">\n            Save Password Item\n            <v-icon\n                right\n                dark\n            >\n              mdi-content-save\n            </v-icon>\n          </v-btn>\n\n        </v-col>\n\n\n      </v-row>\n\n    </v-container>\n  </section>\n\n</template>\n\n<script lang=\"js\">\nimport {mapMutations} from \"vuex\"\n\nexport default {\n  name: 'src-components-new-password',\n  props: [],\n  mounted() {\n    this.getKey()\n    this.makeBasicPassword()\n  },\n  data() {\n    return {\n      newKeyName: undefined,\n      keyValues: [\"Email\", \"Password\", \"Number\", \"Text\"],\n      key: \"\",\n      passwordObj: {},\n      hashedPassword: \"\"\n\n\n    }\n  },\n  methods: {\n    ...mapMutations({\n      savePassword: \"savePassword\",\n      savePasswordList:\"savePasswordsList\"\n    }),\n    getKey() {\n      this.key = \"pass123\"\n    },\n    makeBasicPassword(){\n      Object.assign(this.passwordObj, {name: \"\"})\n      Object.assign(this.passwordObj, {url: \"\"})\n      Object.assign(this.passwordObj, {email: \"\"})\n      Object.assign(this.passwordObj, {password: \"\"})\n      this.$forceUpdate();\n    },\n    savePassObj() {\n      let passwordAsObj = JSON.parse(JSON.stringify(this.passwordObj))\n      let passwordObjAsArray=Object.entries(passwordAsObj)\n      let notEmptyData=passwordObjAsArray.filter((item)=>{\n        //return only what is not empty\n        return item[1]!==\"\"\n      })\n      let utcTimestamp = new Date().getTime();\n      let ready=Object.assign({\"uid\":utcTimestamp},Object.fromEntries(notEmptyData))\n      console.log(Object.keys(ready).length)\n     if(Object.keys(ready).length>1){\n      this.savePassword(ready)\n      this.savePasswordList();\n      this.$router.push({name:\"home\"})\n     }else{\n       window.alert(\"You need to enter something...\")\n     }\n\n\n\n    },\n    addField() {\n      let keyName = this.newKeyName.toLowerCase()\n      Object.assign(this.passwordObj, {[keyName]: \"\"})\n      this.$forceUpdate();\n    }\n  },\n  watch:{\n    passwordObj:{\n      deep:true,\n    }\n  }\n}\n\n\n</script>\n\n<style scoped lang=\"scss\">\n.src-components-new-password {\n\n}\n</style>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./NewPassword.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./NewPassword.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./NewPassword.vue?vue&type=template&id=40b4ff44&scoped=true&lang=html&\"\nimport script from \"./NewPassword.vue?vue&type=script&lang=js&\"\nexport * from \"./NewPassword.vue?vue&type=script&lang=js&\"\nimport style0 from \"./NewPassword.vue?vue&type=style&index=0&id=40b4ff44&prod&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"40b4ff44\",\n  null\n  \n)\n\nexport default component.exports","<template lang=\"html\">\n\n  <section class=\"src-views-new-password-view\">\n    <src-components-new-password/>\n  </section>\n\n</template>\n\n<script lang=\"js\">\n\n  import SrcComponentsNewPassword from \"@/components/NewPassword\";\n  export default  {\n    name: 'src-views-new-password-view',\n    components: {SrcComponentsNewPassword},\n    props: [],\n    mounted () {\n\n    },\n    data () {\n      return {\n\n      }\n    },\n    methods: {\n\n    },\n    computed: {\n\n    }\n}\n\n\n</script>\n\n<style scoped lang=\"scss\">\n  .src-views-new-password-view {\n\n  }\n</style>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./NewPasswordView.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./NewPasswordView.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./NewPasswordView.vue?vue&type=template&id=cc19765a&scoped=true&lang=html&\"\nimport script from \"./NewPasswordView.vue?vue&type=script&lang=js&\"\nexport * from \"./NewPasswordView.vue?vue&type=script&lang=js&\"\nimport style0 from \"./NewPasswordView.vue?vue&type=style&index=0&id=cc19765a&prod&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"cc19765a\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","staticRenderFns","VAutocomplete","name","props","delimiters","type","Array","default","returnObject","Boolean","data","editingIndex","computed","computedCounterValue","multiple","selectedItems","length","internalSearch","toString","hasSlot","VSelect","isAnyValueAllowed","menuCanShow","isFocused","hasDisplayedItems","$slots","hideNoData","searchIsDirty","methods","onInternalSearchChanged","val","delimiter","find","d","endsWith","slice","updateTags","updateMenuDimensions","genInput","input","attrs","on","paste","onPaste","genChipSelection","item","index","chip","componentOptions","listeners","dblclick","getText","selectedIndex","onChipInput","onEnterDown","e","preventDefault","getMenuIndex","$nextTick","updateSelf","onKeyDown","keyCode","ctrlKey","keyCodes","includes","$refs","selectionStart","changeSelectedIndex","onTabDown","stopPropagation","selectItem","updateEditing","toLocaleLowerCase","setSelectedItems","internalValue","setValue","value","undefined","findIndex","Object","assign","splice","push","updateCombobox","isUsingSlot","$scopedSlots","selection","hasChips","menuIndex","itemToSelect","event","pastedItemText","clipboardData","_event$clipboardData","getData","findExistingIndex","clearableCallback","_l","passwordObj","key","model","callback","$set","expression","$$v","newKeyName","_v","mounted","keyValues","hashedPassword","savePassword","savePasswordList","getKey","makeBasicPassword","url","email","password","savePassObj","console","window","addField","watch","deep","component","components","SrcComponentsNewPassword"],"sourceRoot":""}